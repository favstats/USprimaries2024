---
title: "Impressions"
format:
  html:
    theme: lumen
---
  
> An impression is counted as the number of times an instance of an ad is on screen for the first time.

~*Meta Business Help Center*

The Facebook Ad library only provides very broad “lower” and “upper bounds” of impressions. The graphs below sum up the lower and upper bounds individually across all parties.


```{r global, include=FALSE, echo=F, context="setup", results='hide'}


library(flexdashboard)
knitr::opts_chunk$set(echo = F, message = F, warning = F)

library(shiny)
library(janitor)
library(DT)
library(magrittr)
library(glue)
library(highcharter)
library(lubridate)
library(knitr)
library(tidyverse)
library(htmltools)
library(shinyWidgets)



# snap_ads <- readRDS("data/snap_ads.RDS")
# setwd("C:/Users/favoo/Downloads/DutchElectionObservatory/DutchElectionObservatory/site/en")
# trans <- readRDS("../data/trans_dutch.rds")
trans <- readRDS(here::here("data" ,"trans_eng.rds"))

trans$plot_credits_text_fb <- str_remove(trans$plot_credits_text_fb, " Ads since September 1st 2020.")

# t(trans)

# source("../party_utils.R")
color_dat <- readRDS("../data/color_dat.rds")

source("../helpers.R")

# source(here::here("R", "dashboard_data.R"))

fb_aggr <- readRDS("../data/fb_aggr.rds") 

update_time <- Sys.Date()

wtm_data <- read_csv("../data/wtm-advertisers-me-2023-06-09T10_19_46.261Z.csv") %>% #names
  select(advertiser_id = advertisers_platforms.advertiser_platform_ref,
         advertiser_name = name, party = entities.short_name)  %>%
  mutate(advertiser_id = as.character(advertiser_id)) 

parties_fb <- color_dat$party %>% unique

# fb_aggr$total
```



## Total Impressions 

::: {.panel-tabset}

### Minimum

```{r, out.width="100%"}

# debugonce(hc_plotter)

fb_aggr$total <- fb_aggr$total %>% 
  select(-colors) %>% 
  left_join(color_dat %>% mutate(advertiser_name = party))

  fb_aggr %>% 
    hc_plotter(filters = parties_fb,
           plot_type = unlist_it(trans$choices, 3),
           plot_type_sub = unlist_it(trans$total_text, 1),
           platform = "Facebook",
           trans_internal = trans,
           last_updated = update_time, minmax = "Minimum"
    )
```

### Maximum

```{r, out.width="200%"}
  fb_aggr %>% 
    hc_plotter(filters = parties_fb,
           plot_type = unlist_it(trans$choices, 3),
           plot_type_sub = unlist_it(trans$total_text, 1),
           platform = "Facebook",
           trans_internal = trans,
           last_updated = update_time, minmax = "Maximum"
    )
```


:::





## Impressions Over Time

::: {.panel-tabset}


#### Minimum

```{r}
  fb_aggr %>% 
    hc_plotter(filters = parties_fb,
           plot_type = unlist_it(trans$choices, 3),
           plot_type_sub = unlist_it(trans$total_text, 2),
           platform = "Facebook",
           trans_internal = trans,
           last_updated = update_time, minmax = "Minimum"
    )
```

#### Maximum

```{r}
  fb_aggr %>% 
    hc_plotter(filters = parties_fb,
           plot_type = unlist_it(trans$choices, 3),
           plot_type_sub = unlist_it(trans$total_text, 2),
           platform = "Facebook",
           trans_internal = trans,
           last_updated = update_time, minmax = "Maximum"
    )
```


:::



## Impressions by Gender {.tabset .tabset-fade .tabset-pills}

> The boxplots show the distribution of average audience shares per gender by advertiser.

For every ad, the Facebook ad library provides a “percentage” which relates to the share of men and women have that have seen the ad. So, the audience of an ad could show, for example, that 60% of the users that have seen the ad were women.

::: {.panel-tabset}


#### All at Once

```{r, out.width="100%", fig.height=15}
# debugonce(hc_plotter)

fb_aggr$gender <- fb_aggr$gender %>% 
  mutate(advertiser_name = party)

  fb_aggr %>%
    hc_plotter(filters = parties_fb,
           plot_type = unlist_it(trans$choices, 4),
           plot_type_sub = unlist_it(trans$targeted_ads_choices, 1),
           platform = "Facebook",
           trans_internal = trans,
           last_updated = update_time, minmax = "Minimum"
    )

```

 



#### Per Party




```{r, out.width="100%", fig.height=15}


gg_gender <- fb_aggr$gender %>% 
  filter(party %in% parties_fb)  %>% 
          filter(gender %in% c("male", "female")) %>% 
          mutate(gender = ifelse(gender == "male", trans$gender_male, trans$gender_female)) %>% 
  ggplot(aes(gender, percentage, color = gender)) +
  geom_boxplot() +
  ggthemes::scale_color_hc() +
  facet_wrap(~advertiser_name, ncol = 3, scales = "free_x") +
  # ylim(0, 100) +
  theme_minimal() +
  labs(y = "", x = "") +
  theme(legend.position = "top", 
        strip.background =element_rect(fill="lightgrey"), 
        strip.text = element_text(colour = 'black'), axis.title.x = element_text(size = 0.1))


gg_gender %>% 
  plotly::ggplotly(dynamicTicks = F) %>%
  plotly::layout(
    xaxis = list(automargin=TRUE),
    yaxis = list(automargin=TRUE,
                 title = trans$plot_yaxis_gender_fb,
                 titlefont  = list(size = 0.1)),
    legend = list(
    orientation = "h",
    y = 1.05
    )
  ) 
```


:::


## Impressions by Age {.tabset .tabset-fade .tabset-pills}

> The boxplots show the distribution of average audience shares per age group by advertiser. 

For every ad, the Facebook ad library provides a “percentage” which relates to the share of the specific demographic that has seen the ad. So, the audience of an ad could show, for example, that 60% of the users that have seen the ad were between 18-24 

You can try to remove/add individual age groups to better understand the graph

::: {.panel-tabset}





#### All at Once

```{r}

fb_aggr$age <- fb_aggr$age %>% 
  mutate(advertiser_name = party)

  fb_aggr %>%
    hc_plotter(filters = parties_fb,
           plot_type = unlist_it(trans$choices, 4),
           plot_type_sub = unlist_it(trans$targeted_ads_choices, 2),
           platform = "Facebook",
           trans_internal = trans,
           last_updated = update_time, minmax = "Minimum"
    ) 
```




#### Per Party

```{r, out.width="100%", fig.height=15, fig.width=10}

# debugonce(hc_plot_boxes)





gg_age <- fb_aggr$age %>% 
  filter(party %in% parties_fb)  %>% 
  ggplot(aes(age, percentage, color = age)) +
  geom_boxplot() +
  ggthemes::scale_color_hc() +
  facet_wrap(~advertiser_name, ncol = 2, scales = "free_x") +
  # ylim(0, 100) +
  theme_minimal() +
  labs(y = "", x = "") +
  theme(legend.position = "top", 
        strip.background =element_rect(fill="lightgrey"), 
        strip.text = element_text(colour = 'black'), axis.title.x = element_text(size = 0.1))


gg_age %>% 
  plotly::ggplotly(dynamicTicks = F) %>%
  plotly::layout(
    xaxis = list(automargin=TRUE),
    yaxis = list(automargin=TRUE,
                 title = trans$plot_yaxis_age_fb,
                 titlefont  = list(size = 0.1)),
    legend = list(
    orientation = "h",
    y = 1.05
    )
  ) 
```

:::




<!-- ## Potential Reach -->


<!-- ```{r, out.width="100%", fig.height=6, fig.width=8} -->


<!-- color_dat <- fb_aggr$reach %>%  -->
<!--   # rename(colors = colors) %>%  -->
<!--   filter(party %in% parties_fb) %>%  -->
<!--   distinct(party, .keep_all = T) %>%  -->
<!--   arrange(party) -->

<!-- # color_dat <- set_names(color_dat$colors, color_dat$advertiser_name) -->

<!-- gg_reach <- fb_aggr$reach %>%  -->
<!--   # rename(colors = color) %>%  -->
<!--   filter(party %in% parties_fb) %>%  -->
<!--   ggplot(aes(party, potential_reach_min, color = party)) + -->
<!--   geom_boxplot() + -->
<!--   scale_y_log10(labels = scales::label_number()) + -->
<!--   scale_color_manual(values = unique(color_dat$colors)) + -->
<!--   theme_minimal() + -->
<!--   labs(y = "", x = "") + -->
<!--   theme(legend.position = "none",  -->
<!--         strip.background =element_rect(fill="lightgrey"),  -->
<!--         strip.text = element_text(colour = 'black'), axis.title.x = element_text(size = 0.1)) -->


<!-- gg_reach %>%  -->
<!--   plotly::ggplotly(dynamicTicks = F) %>% -->
<!--   plotly::layout( -->
<!--     xaxis = list(automargin=TRUE), -->
<!--     yaxis = list(automargin=TRUE, -->
<!--                  title = "Potential Reach (Minimum)", -->
<!--                  titlefont  = list(size = 0.1)) -->
<!--   ) -->
<!-- ``` -->

<!-- Facebook says about this metric:  -->

<!-- > This is an estimate of the size of the audience that's eligible to see this ad. It's based on targeting criteria, ad placements and how many people were shown ads on Facebook apps and services in the past 30 days. -->
<!-- ~*Meta Business Help Center* -->


<!-- Based on that, we can assume that a higher potential reach means that a party was trying to target a broader range of citizen whereas a lower potential reach means the party was engaging in more microtargeting. The boxplots show the distribution of average minimum potential reach by advertiser. -->

